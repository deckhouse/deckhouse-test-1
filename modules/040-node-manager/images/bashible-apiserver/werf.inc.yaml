---
image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
fromImage: common/src-artifact
final: false
git:
- add: /{{ $.ModulePath }}modules/040-{{ $.ModuleName }}/images/{{ $.ImageName }}/src
  to: /src
  excludePaths:
  - "**/*.md"
  - "**/*.yaml"
  - hack
  stageDependencies:
    install:
    - go.mod
    - go.sum
    - "**/*.go"
---
image: {{ .ModuleName }}/{{ .ImageName }}-artifact
from: index.docker.io/himax/golang:1.23.6-bookworm-svace@sha256:d2f3bd955f5c60a34e23ff4248ecd26163b06ae239d5e9e0687fd5db21e38661
final: false
import:
- image: {{ .ModuleName }}/{{ .ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
shell:
  install: |
    export GOPROXY={{ $.GOPROXY }}
    cd /src
    go mod download -x
    export CGO_ENABLED=0 GOOS=linux GOARCH=amd64 
    {{- include "image-build.build" (set $ "BuildCommand" `go build -ldflags="-s -w" -o bashible-apiserver`) | indent 4 }}
    chown 64535:64535 bashible-apiserver
    chmod 0700 bashible-apiserver
---
image: {{ .ModuleName }}/{{ .ImageName }}
fromImage: common/distroless
import:
- image: {{ .ModuleName }}/{{ .ImageName }}-artifact
  add: /src/bashible-apiserver
  to: /bashible-apiserver
  before: setup
git:
{{ .Files.Get (printf "tools/build_includes/candi-%s.yaml" .Env) }}
- add: /{{ .ModulePath }}candi/bashible
  to: /deckhouse/candi/bashible
  stageDependencies:
    beforeSetup:
    - "*"
  includePaths:
  - bundles
  - common-steps
  - bootstrap
  - bashible.sh.tpl
  {{- if eq .Env "CE" }}
  - detect_bundle.sh
  {{- end }}

  excludePaths:
  - "**/cluster-bootstrap"
- add: /{{ .ModulePath }}candi/cloud-providers
  to: /deckhouse/candi/cloud-providers
  stageDependencies:
    beforeSetup:
    - "*"
  includePaths:
  - "*/bashible"
imageSpec:
  config:
    entrypoint: ["/bashible-apiserver", "--tls-cipher-suites", "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA"]
