---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.0.0
  labels:
    heritage: deckhouse
    module: deckhouse
  name: projecttypes.deckhouse.io
spec:
  group: deckhouse.io
  names:
    kind: ProjectType
    listKind: ProjectTypeList
    plural: projecttypes
    shortNames:
    - pt
    singular: projecttype
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              namespaceMetadata:
                description: NamespaceMetadata is metadata to apply to Project namespaces
                type: object
              openAPI:
                description: OpenApi spec for tempaltes
              resourcesTemplate:
                description: Resource templates
                type: string
              subjects:
                description: Subjects to apply access to project
                items:
                  oneOf:
                  - properties:
                      kind:
                        enum:
                        - ServiceAccount
                      name: {}
                      namespace: {}
                      role: {}
                    required:
                    - kind
                    - name
                    - namespace
                    - role
                  - properties:
                      kind:
                        enum:
                        - User
                        - Group
                      name: {}
                      role: {}
                    required:
                    - kind
                    - name
                    - role
                  properties:
                    kind:
                      enum:
                      - ServiceAccount
                      - User
                      - Group
                      type: string
                    name:
                      minLength: 1
                      type: string
                    namespace:
                      minLength: 1
                      pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?'
                      type: string
                    role:
                      enum:
                      - User
                      - PrivilegedUser
                      - Editor
                      - Admin
                      type: string
                  type: object
                type: array
            type: object
          status:
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
